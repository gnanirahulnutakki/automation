# Stage 1: Get AWS CLI from the official image
FROM amazon/aws-cli:2.13.5 as awscli

# Final Stage: Build the final image
FROM debian:bullseye-slim

# Install necessary packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    jq \
    unzip \
    ca-certificates \
    gnupg \
    lsb-release \
    less \
    groff \
    rsync \
    openssh-client \
    gzip \
    tar \
    python3 \
    python3-pip \
    python3-distutils \
    python3-lib2to3 \
    git \
    htop \
    net-tools \
    vim \
    netcat \
    telnet \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic link for Python3
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Install AWS CLI v2 from the binary package
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && ./aws/install \
    && rm -rf aws awscliv2.zip

# Install Terraform
RUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - \
    && apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" \
    && apt-get update && apt-get install -y --no-install-recommends terraform \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js and NPM
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y --no-install-recommends nodejs \
    && rm -rf /var/lib/apt/lists/*

# Install ShellCheck
RUN apt-get update && apt-get install -y --no-install-recommends shellcheck \
    && rm -rf /var/lib/apt/lists/*

# Install Bats
RUN git clone https://github.com/bats-core/bats-core.git /tmp/bats-core \
    && /tmp/bats-core/install.sh /usr/local \
    && rm -rf /tmp/bats-core

# Install Trivy
RUN curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

# Install Azure CLI
RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash

# Install Google Cloud SDK
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | \
    tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \
    && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
    apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \
    && apt-get update && apt-get install -y --no-install-recommends google-cloud-sdk \
    && rm -rf /var/lib/apt/lists/*

# Install kubectl (latest stable release)
RUN curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
    && chmod +x kubectl \
    && mv kubectl /usr/local/bin/

# Create a non-root user for security
RUN useradd -m appuser

# Create workspace directory and set proper ownership
RUN mkdir -p /workspace && chown -R appuser:appuser /workspace

# Switch to non-root user
USER appuser

# Set the working directory
WORKDIR /workspace

# Default command (can be overridden)
CMD ["/bin/bash"]
